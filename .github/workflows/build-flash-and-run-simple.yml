name: Simple pipeline to build firmware, flash DUT, and run tests
on: [push]
env:
  LAGER_GATEWAY: cheeky-chipmunk

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Build Project
        uses: docker://lagerdata/devenv-cortexm-minimal
        with:
          entrypoint: /usr/local/bin/lager
          args: exec build

      - name: Upload the test hexfile
        uses: actions/upload-artifact@v2
        with:
          name: test_hexfile
          path: _build/unit-tests/test-suites/test-example/test-example.hex

      - name: Upload the app hexfile
        uses: actions/upload-artifact@v2
        with:
          name: app_hexfile
          path: _build/app/app.hex

      - name: Upload led python test script
        uses: actions/upload-artifact@v2
        with:
          name: led_test_script
          path: system-tests/led_test/main.py

  connect:
    runs-on: ubuntu-latest
    steps:
      - name: Turnstyle
        id: turnstyle
        uses: softprops/turnstyle@v1
        with:
          abort-after-seconds: 600
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Connect to gateway
        uses: docker://lagerdata/lager-cli
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}     #This is setup inside GitHub see https://docs.lagerdata.com/ci/github_actions.html     
        with:
          entrypoint: /usr/local/bin/lager
          args: connect --device nrf52 --force
          
      - name: Sleep for 120 seconds
        uses: jakejarvis/wait-action@master
        with:
          time: '120s'


  run_tests: #Only proceed to this step if the build and connect jobs succeeded 
    runs-on: ubuntu-latest
    needs: [build, connect]
    steps:
      - name: Turnstyle
        id: turnstyle
        uses: softprops/turnstyle@v1
        with:
          abort-after-seconds: 600
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

      - name: Download the test hexfile
        uses: actions/download-artifact@v2
        with:
          name: test_hexfile

      - name: Download the app hexfile
        uses: actions/download-artifact@v2
        with:
          name: app_hexfile

      - name: Download led test python script
        uses: actions/download-artifact@v2
        with:
          name: led_test_script

      - name: Run a unit test
        uses: docker://lagerdata/lager-cli
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}
        with:
          entrypoint: /usr/local/bin/lager
          args: testrun --serial-device /dev/ttyACM0 --hexfile /github/workspace/test-example.hex

      - name: Run LED System Test
        uses: docker://lagerdata/lager-cli
        env:
          LAGER_TOKEN_ID: ${{ secrets.LAGER_TOKEN_ID }} 
          LAGER_TOKEN_SECRET: ${{ secrets.LAGER_TOKEN_SECRET }}
        with:
          entrypoint: /usr/local/bin/lager
          args: python --image lagerdata/gatewaypy3:v0.1.87 /github/workspace
